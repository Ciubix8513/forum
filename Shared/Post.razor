@*The GPLv3 License (GPLv3)

Copyright (c) 2023 Ciubix8513

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.*@

@inject NavigationManager _navigationManager;
@inject IApiLogic _apiLogic;
@using Api.Dtos;

@code{
    public string date {get; set;}
    public MarkupString content {get; set;}
    public string username {get; set;}
    public string postCount {get; set;}
    public int? replyCount {get; set;} = 0;
    public int postId {get; set;} = 1;
    public int? creatorId {get; set;}= 0;
    public string pfpLink {get;set;}
    private string pfpSource {get; set;} = "Resources/EmptyPFP.png";
    public string Class {get; set;} = "d-block";

    void ContentsClick()=> _navigationManager.NavigateTo($"/?postId={postId}",true);

    public void ChangeClass(string c)
    {
        Class = c;
        StateHasChanged();
    }

    [CascadingParameter] public IModalService Modal {get; set;}
    async Task ReportClick()
    {
        string reason = string.Empty;
        var form = Modal.Show<ReportModal>("",new ModalOptions(){Class="custom-modal"});
        var res = await form.Result;
        if(!res.Cancelled)
            reason = res.Data?.ToString() ?? string.Empty;
        if(reason == string.Empty)
            return;
        await _apiLogic.RepPost(postId,reason);
    }
    [Parameter]public PostsGetDto data {get; set;}
    public void LoadPost(PostsGetDto dto)
    {
        data = dto;
        date = dto.Date?.ToString("dd.MM.yyyy");
        content = (MarkupString)dto.Contents;
        username = dto.CreatorUsername;
        pfpLink = dto.CreatorPFP;
        creatorId = dto.CreatorId;
        postId = dto.Id;
        replyCount = dto.ReplyCount;
        postCount = dto.CreatorPostCount.ToString();
        Class = "d-block";
        StateHasChanged();
    }
    protected override void OnInitialized()=>LoadPost(data);
    void userclick() => _navigationManager.NavigateTo($"/User?userId={creatorId}",true);
}
<div class="@Class">
    <span class="d-flex align-items-stretch mx-3 broder border-danger" style="outline: 5px solid #171A1D; background-color:#222229" >
        <div class="p-2  text-wrap" style="width:59rem;">
        <div @onclick="ContentsClick" style="cursor:pointer">@content</div>
        <div class="small mx-1 mt-4 d-flex">
                <div>
                @replyCount replies 
                </div>
                <div class ="mx-3">
                <AuthorizeView>
                    <div @onclick="ReportClick" style="cursor:pointer">report</div>
                </AuthorizeView>
                </div>
            </div>
        </div> 
        <img src="@pfpSource" width="64" height="64"/>
        <div class="p-2" @onclick="userclick" style="cursor:pointer">
            @username 
            <br>
            @postCount posts
            <div class="mx-5 small bottom-100">@date</div>
        </div>    
    </span>
</div>

