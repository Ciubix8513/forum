@inject NavigationManager _navigationManager;
@inject IApiLogic _apiLogic;
@using Api.Dtos;

@code{
    public string date {get; set;} 
    public MarkupString content {get; set;} 
    public string username {get; set;} 
    public string postCount {get; set;} = "âˆž";
    public int? replyCount {get; set;} = 0;
    public int postId {get; set;} = 1;
    public int? creatorId {get; set;}= 0;
    public string pfpLink {get;set;}
    private string pfpSource {get; set;} = "Resources/EmptyPFP.png";
    [Parameter] public string? Class{get;set;} = "d-block";
    
    public void ChangeClass(string c)
    {
        Class = c;
        StateHasChanged();
    }

    private string EditClass = "d-none";

    void ContentsClick()=> _navigationManager.NavigateTo($"/?postId={postId}",true);

    [CascadingParameter] public IModalService Modal {get; set;}
    async Task ReportClick()
    {
        
        string reason = string.Empty;
        var form = Modal.Show<ReportModal>("",new ModalOptions(){Class="custom-modal"});
        var res = await form.Result;
        if(!res.Cancelled)
            reason = res.Data?.ToString() ?? string.Empty;
        if(reason == string.Empty)
            return;
        _apiLogic.RepPost(postId,reason);
    }
    public void LoadPost(PostsGetDto dto)
    {
        date = dto.Date?.ToString("dd.MM.yyyy");
        content = (MarkupString)dto.Contents;
        username = dto.CreatorUsername;
        pfpLink = dto.CreatorPFP;
        creatorId = dto.CreatorId;
        postId = dto.Id;
        replyCount = dto.ReplyCount;
        postCount = dto.CreatorPostCount.ToString();
        StateHasChanged();
    }
    void ReplyClickTop()=>EditClass = "d-block";
    string message = "";
    async void ReplyClick()
    {
        await _apiLogic.AddPost(message,postId);
        CancelClick();
        ContentsClick();
        StateHasChanged();
    }
    void CancelClick()
    {
        EditClass = "d-none";
        message = "";
    }
}
<div class="@Class mb-2">
    <div class="d-flex align-items-stretch"style="outline: 5px solid #171A1D; background-color:#222229">
        <div class="p-2 text-wrap" style="width:60rem;">
             <div @onclick="ContentsClick" style="cursor:pointer;">@content</div>
            <AuthorizeView>
                <div class="small mx-1 mt-4 d-flex">
                    <div @onclick="ReplyClickTop" style="cursor:pointer">
                        reply 
                    </div>
                    <div class ="mx-3">
                            <div @onclick="ReportClick" style="cursor:pointer">report</div>
                    </div>
                </div>
            </AuthorizeView>
        </div> 
        <img src="@pfpSource" width="64" height="64"/>
        <div class="p-2">
            @username 
            <br>
            @postCount posts
            <div class="mx-5 small bottom-100">@date</div>
        </div>    
    </div>
    @* edit field *@
    <AuthorizeView>
        <div class="mt-2 @EditClass">
            <textarea @bind="message" class="bg" rows="5" cols="120" style="color: #d8cfc7;resize: none; background-color: #222229FF !important "></textarea>
            <button @onclick="ReplyClick" class="btn btn-dark btn-outline-light mx-2">Reply</button>
            <button @onclick="CancelClick" class="btn btn-dark btn-outline-light mx-2">Cancel</button>
        </div>
    </AuthorizeView>
</div>
