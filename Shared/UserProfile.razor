@*The GPLv3 License (GPLv3)

Copyright (c) 2023 Ciubix8513

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.*@

@inject IApiLogic _apiLogic;
@inject NavigationManager _navigationManager;
@using Api.Dtos;

@code{
    string pfpSource {get; set;} = "Resources/EmptyPFP.png";
    int userId {get; set;} = 1;
    string username {get; set;} = "luna";
    string postCount {get; set;} = "5";
    MarkupString BIO {get; set;} = (MarkupString)"This is a test bio";
    string EditClass = "d-none";
    
    public void LoadData(UserDataDto dto)
    {
        userId = dto.Id;
        username = dto.Username;
        BIO = (MarkupString)dto.Bio;
        postCount = dto.PostCount.ToString();
        StateHasChanged();
    }
    
    void EditClickTop()
    {
        EditClass = "d-block";
        message = BIO.ToString();
    }
    string message = "";
    void EditClick()
    {
        _apiLogic.EditBio(userId,message);
        CancelClick();
        _navigationManager.NavigateTo($"/User?userId={userId}",true);
    }
    void CancelClick()
    {
        message = "";
        EditClass = "d-none";
    }
    [CascadingParameter] public IModalService Modal {get; set;}
    async Task ReportClick()
    {
        string reason = string.Empty;
        var form = Modal.Show<ReportModal>("",new ModalOptions(){Class="custom-modal"});
        var res = await form.Result;
        if(!res.Cancelled)
            reason = res.Data?.ToString() ?? string.Empty;
        if(reason == string.Empty)
            return;
        await _apiLogic.RepUser(userId,reason);
    }
}
<div class="mb-2">
    <div class="d-flex align-items-stretch mb-2"style="outline: 5px solid #171A1D; background-color:#222229">
        <img src =@pfpSource width="128" height="128"/>
        <div class="mx-1">
            <h1>@username</h1>
            <p>@postCount posts</p>
        </div>
        <div class="mt-3 mx-2 text-wrap p-2" style="width:60rem">
            @BIO
            <br>
        <AuthorizeView>
        <div class="d-flex">
            <div class="mt-5 small" style="cursor:pointer" @onclick="ReportClick">
                report 
            </div>
        @if(Convert.ToInt32(context.User.Identity.GetClaimByName(CustomClaimsTypes.UserId)) == userId ||
            Convert.ToBoolean(context.User.Identity.GetClaimByName(CustomClaimsTypes.Privilege))){
            <div class="mt-5 mx-2 small" style="cursor:pointer" @onclick="EditClickTop">
                edit
            </div>}
        </div>
        </AuthorizeView>
        </div>
    </div>
    @* edit field *@
    <AuthorizeView>
        <div class="mt-2 @EditClass">
            <textarea @bind="message" class="bg" rows="5" cols="100" style="color: #d8cfc7;resize: none; background-color: #222229FF !important "></textarea>
            <br>
            <button @onclick="EditClick" class="btn btn-dark btn-outline-light mx-2">Edit</button>
            <button @onclick="CancelClick" class="btn btn-dark btn-outline-light mx-2">Cancel</button>
        </div>
    </AuthorizeView>
</div>