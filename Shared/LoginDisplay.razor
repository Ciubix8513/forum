@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject IApiLogic _apiLogic
@inject ILocalStorageService _localStorageService;
@code 
{
    private async Task Logout()
    {
        var response = await _apiLogic.LogoutAsync();
        if(response == "Success")
        {
            (_authStateProvider as CustomAuthProvider).ClearAuthInfo();
            await _localStorageService.RemoveItemAsync("isauthenticated");
            _navigationManager.NavigateTo("/",true);
        }
    }
}
<AuthorizeView>
    <Authorized>
        <a href="">@context.User.Identity.GetClaimByName(CustomClaimsTypes.Username)</a>
        <button type="button" @onclick="Logout" class = "nav-link btn btn-link">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>